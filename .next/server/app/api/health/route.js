(()=>{var e={};e.id=772,e.ids=[772],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},24467:()=>{},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},36001:(e,t,r)=>{"use strict";r.d(t,{kY:()=>i,qw:()=>c,S5:()=>u,nV:()=>l});let s=require("mongodb"),n=process.env.MONGODB_URI||"",a=null,o=null;async function i(){if(o)return o;try{return a=new s.MongoClient(n),await a.connect(),o=a.db("leadcloser"),console.log("Connected to MongoDB"),o}catch(e){throw console.error("MongoDB connection error:",e),e}}async function c(){let e=await i();return{users:e.collection("users"),leads:e.collection("leads"),assessments:e.collection("assessments"),subscriptions:e.collection("subscriptions")}}async function u(e){let{subscriptions:t}=await c();return await t.find({userId:e,status:"active"}).sort({createdAt:-1}).limit(1).next()}async function l(e,t){let{subscriptions:r}=await c(),s=new Date;return await r.updateOne({_id:e},{$set:{...t,updatedAt:s}}),await r.findOne({_id:e})}},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61419:()=>{},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},92419:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>g,routeModule:()=>p,serverHooks:()=>w,workAsyncStorage:()=>h,workUnitAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{GET:()=>d,dynamic:()=>u,runtime:()=>l});var n=r(43007),a=r(44360),o=r(98343),i=r(28142),c=r(36001);let u="force-dynamic",l="nodejs";async function d(e){try{await (0,c.kY)();let e=await (0,c.qw)();return i.NextResponse.json({success:!0,message:"LeadCloser API is running",status:"healthy",environment:"production",timestamp:new Date().toISOString(),database:{connected:!0,collections:Object.keys(e)}})}catch(e){return console.error("Health check error:",e),i.NextResponse.json({success:!1,message:"API is running but database connection failed",status:"unhealthy",error:e instanceof Error?e.message:"Unknown error",timestamp:new Date().toISOString()},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"D:\\leadcloser\\leadcloser\\src\\app\\api\\health\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:h,workUnitAsyncStorage:m,serverHooks:w}=p;function g(){return(0,o.patchFetch)({workAsyncStorage:h,workUnitAsyncStorage:m})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[535,38],()=>r(92419));module.exports=s})();